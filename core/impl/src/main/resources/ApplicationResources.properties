#
# Copyright 2004-2014 The Kuali Foundation
#
# Licensed under the Educational Community License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.opensource.org/licenses/ecl2.php
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

error.invalidTime={0} is not a valid time.
validation.time12AMPM=Must be a valid 12 hour time in HH:mm aa format
error.invalidLookupDate=Could not convert '{0}' to a valid date. Accepted formats are 'MM/dd/yyyy', 'M/D/YY' or any combination the two.
# Time Keeping Business Rule Validation Messages
#

# Title
app.title=Kuali Time
# end of the title

dept.notfound=The department specified is not valid.
dept.org.notfound=The value specified was not found.
dept.chart.notfound=The value specified was not found.
dept.org.chart.notmatch=The organization '{0}' does not belong to the selected Chart '{1}'.
dept.role.person.notExist=The person '{0}' does not exist.
dept.shifthour.exceedsMax=Shift Hour cannot be greater than 24.
dept.lunch.deductionmins.exceedsMax=Deduction minutes should be in between 0 to 180.

location.role.person.notExist=The person '{0}' does not exist.

# Roles
role.required=At least one active role must be defined.
role.payrollProcessorRequired=A payroll processor role member is required, as payroll approval is checked.
role.approver.name=Approver
role.org_admin.name=Org. Administrator
role.sys_admin.name=System Administrator
# end of Roles

# Tabs
tabs.clock=Clock
tabs.timeDetail=Time Detail
tabs.historicalTimesheets=Historical Timesheets
tabs.approvals=Approvals
tabs.personInfo=Person Info
tabs.admin=Admin
# end of tab

#kfs objects
projectcode.organization.chart.inconsistent=The chart of the supplied organization '{0}', does not match the one defined for this project code: '{1}'.
subobjectcode.account.chart.inconsistent=The chart of the supplied account '{0}', does not match the one defined for this sub-object code: '{1}'.
subobjectcode.objectcode.chart.inconsistent=The chart of the supplied object code '{0}', does not match the one defined for this sub-object code: '{1}'.
subobjectcode.account.chart.exists=Invalid account. Check that an active account exists with this account number, and its chart code is '{0}'.
subobjectcode.objectcode.chart.exists=Invalid object code. Check that an active object with this code exists for fiscal year '{0}', and its chart code is '{1}'.
exists.chart=No active chart exists for this code
exists.organization=No such active organization exists whose chart matches '{0}'.
exists.account=No such active account exists whose chart matches '{0}'.
exists.financialobjectcode=No such active object code exists whose chart matches '{0}'.

# Job
job.location.inconsistent=Location must match that of the specified department, '{0}'.
error.jobDocument.bigDecimal=Compensation Rate needs to be a valid decimal and cannot be greater than 999.99.

# Clock
clock.title=Clock
clock.currentTime=Current Time
clock.workStatus=Work Status
clock.elapsedTime=Elapsed Time
clock.lastClockedHours=Last Clocked Hours
clock.clockAssignment=Clock Assignment

# Missed Punch
clock.mp.past24hour.date=The date/time is not valid. A Clock In Action cannot be 24 hours before the current time.
clock.mp.invalid.datetime=The date/time is not valid. It cannot be before previous clock action, or 24 hours beyond a clock in.
clock.mp.future.date=Missed Punch Action Date cannot be a future date.
clock.mp.future.time=Missed Punch Action Time cannot be a future time.
clock.mp.onlyOne.action=A Clock In Action has been put in by Missed Punch. A Time Block can only use Missed Punch once.
clock.mp.invalid.timesheet=The Time Sheet document is enroute or final. No missed punch can be submitted.
clock.mp.assignment.required=You must choose an active assignment.
clock.mp.assignment.active=Assignment is not effective as of date chosen.
clock.mp.unauthorized=User '{0}' is not authorized to modify/create Missed Punch for user {1}'.
clock.mp.already.logged.time=User has already logged time for this clock period.
clock.mp.cross.calendar=Last Clock In Action was on a previous calendar, no Clock Out Action can be taken at this time. Please contact System Administrator for assistance.
clock.mp.invalid.action=The action '{0}' is invalid.
# end of clock

# Time Detail
time.detail.assignment=Account Name
time.detail.earnCode=Earn Code
time.detail.action=Action
time.detail.documentStatus=Document Status
# end of time detail

# Historical Timesheet
time.historical.docId=Doc Id
time.historical.payPeriod=Pay Period
time.historical.assignment=Assignment
time.historical.status=Status
# end of historical timesheet

# Approvals
approval.totalHours=Total Hours
approval.status=Status
approval.workAreas=Work Area(s)
approval.selectAllNone=Select
approval.documentId=Document Id
approval.principalId=Principal Id
approval.principalName=Principal Name

# Person Info
person.info.targetEmployeeName=Target Name
person.info.employeeName=Employee Name
person.info.employeeId=Employee Id
person.info.employeeNumber=Employee Number
person.info.idNumber=USC ID Number
person.info.employeeUserType=Employee User Type
person.info.homeDeptName=Home Dept. Name
person.info.homeDeptNumber=Home Dept. Number
person.info.employeeWorkState=Employee Work State
person.info.supervisorName=Supervisor Name
person.info.homeDeptCoordinator=Home Dept. Coordinator
person.info.homeDeptPhoneNumber=Home Dept. Phone Number
person.info.homeDeptEmail=Home Dept. Email
person.info.startTime=Start Time
person.info.timesheetStatus=Timesheet Status
person.info.periodEndingDate=Period Ending Date
# end of person info


# misc.
ipaddress.invalid.format='{0}' is not a valid IP address.
graceperiod.hour.factor.invalid={0} is not a valid minute.  It must be greater than 0 and less than 60.
earncode.notfound=You must specify a valid earn code.
earncode.rollupToEarnCode.notfound = '{0}' is not a valid earn code.
earncode.recordMethod.invalid='{0}' is not valid. You must specify a record method that matches the accrual category's Unit of Time.
earncode.ovt.required='{0}' is not flagged as an overtime earn code.
earncode.ovt.not.required='{0}' is flagged as an overtime earn code.
earncode.record.not.specified=For this earn code you must specify Record Hours or Record Time or Record Amount.
earncode.record.unique=For this earn code you can only specify one of the Record types.
earncode.accrualCategory.invalid=Accrual Category {0} is not valid for Leave Plan {1}.
earncode.leavePlan.required=Leave Plan is required if Accrual Category is provided.
earncode.accrualBalanceAction.invalid=Accrual Balance Action cannot be None if Accrual Category is provided.
earncode.inflateminhours.should.be.zero=Inflate Min Hours should be 0, if Overtime Earn Code or Record Amount is checked.
earncode.accrualcategory.should.be.blank=Accrual Category should be blank, as Record Amount is checked.
earncode.inflatefactor.should.be.one=Inflate Factor should be 1, as Record Amount is checked. 
earngroup.duplicate.earncode={0} is already a part of this earngroup.
earngroup.earncode.already.used={0} is used by another earn group - '{1}'.
earngroup.effectiveDate.newr.exists=There is a newer version of this Earn Group.
earngroup.earncode.overtime=Earn Group '{0}' has overtime earn codes.
earncode.earncode.unique=There already exists an earn code with this name.
earncode.earncode.inactivate=Cannot inactivate earn code '{0}'. It is used in active time blocks.
earncode.inactivate.locked=Cannot inactivate earn code '{0}'.
earncode.effectiveDate.newer.exists=There is a newer version of this Earn Code.
principal.cal.pay.invalid={0} is an invalid pay calendar.
principal.cal.holiday.invalid={0} is an invalid holiday calendar.
principalid.job.invalid.sync=Principal Id and Job Number are not in sync.
dept.workarea.invalid.sync=Department Id and Work Area are not in sync.
task.workarea.invalid.sync=Task and Work Area are not in sync.
task.workarea.invalid.effdt=Task effective date cannot be before work area effective date.
workarea.invalid.effdt=Work Area Effective date is required to add new task.
dept.jobnumber.invalid.sync=Department Id and Job Number are not in sync.
error.active.account.percentage=Active account %s not summing up to 100.
error.percentage.earncode=Earn code %s not summing up to 100.
calendar.notfound=You must specify a valid Calendar.
deptEarncode.EarnOrLeave.Code.Required=A valid Earn Code or Leave Code must be specified.
deptEarncode.EarnOrLeave.Code.NotBoth=Cannot have both an Earn Code and a Leave Code on a single document.
deptEarncode.effectiveDate.newer.exists=There is a newer version of this Department Earn Code.
deptEarncode.duplicate.exists=There is an exact duplicate version of this Department Earn Code.
deptEarncode.deptEarncode.inactivate=Cannot inactivate department earn code '{0}'. It is used in active time blocks.
principal.jobnumber.already.exist=Job Number '{0}' is already associated with Principal Id '{1}'.
clocklocationrule.newer.exists=There is a newer version of this Clock Location Rule.
weeklyOvertimeRule.duplicate.step=Rule already exists for step '{0}'.
earncode.required=At least one earn code must be defined.
workarea.active.required=Workarea should be active, as it is associated with employee's Job.
dept.user.unauthorized=User '{0}' is not authorized to modify/create for Department '{1}'.
task.active.required=Task '{0}' should be active, as it is associated with employee's Job.
task.active.inactivate=Cannot inactivate task '{0}'. It is associated with an active assignment.
earncode.regular.pay.required=Assignment must have at least one regular earn code account associated with it.
paytype.inactivate.locked=Cannot inactivate pay type '{0}'. It is used in active jobs.
paytype.campus.invalid=Campus {0} is invalid.
paytype.institution.invalid=Institution {0} is invalid.
timeoffaccrual.duplicate.exists=There is an exact duplicate version of this Time Off Accrual.
error.role.expiration=Expiration date must be greater than effective date.
error.role.expiration.required=Expiration date is a required field if delegate role is selected.
error.role.expiration.duration=Expiration date cannot be more then six months from the effective date for Delegate roles.
error.role.chart.required=You must specify a Chart/Location for this role.
error.role.chart.disallowed=You cannot specify a Chart/Location for this role.
error.role.person.notexist=The person '{0}' does not exist.
error.role.positionNumber.notexist=The position number '{0}' does not exist.
error.role.workArea.notexist=The work area '{0}' does not exist.
error.role.active.duplicate=This role member overlaps with another active member.
error.role.active.existence=Adding this role member would overlap the following active member.
error.role.inactive.duplicate=This role member overlaps with an inactive role member.
error.role.inactive.existence=Adding this role member would overlap the following inactive member.
error.future.date='{0}' needs to be a future date.
error.date.exceed.year='{0}' must be a future date that is NOT more than a year away from current date.
error.hours='{0}' should be between 0 and 24.
error.amount.fraction=Earn Code '{0}' only allows {1} decimal point.
error.missing.payCalendar=User {0} does not have a valid Pay Calendar set up on their Principal HR Attributes record.
error.missing.leaveCalendar=User {0} does not have a valid Leave Calendar set up on their Principal HR Attributes record.
principal.is.not.dept.admin=User is not admin for Principal department.
# end of misc.

#validation
keyedSet.keyList.empty = Group key list cannot be empty.
keyedSet.keyList.duplicates = Group key list contains duplicates.
keyedSet.duplicate.groupKeyCode={0} is already a part of this group key list.
error.department.location.nomatch=The specified department '{0}' does not match the Location.
error.groupkey.location.nomatch=The specified Location '{0}' does not match the Group Key.
error.department.groupkey.nomatch=The specified department '{0}' does not match the Group Key.
error.department.permissions=You do not have permission to create a rule for department '{0}'.
error.department.duplicate.exists=There is an existing Department with exact duplicate Department name '{0}' and group key code '{1}'.
error.location.duplicate.exists=There is an exact duplicate version of this Location.
error.validation.long.or.wildcard='{0}' is not a valid entry.  Number or % is valid for this field.
error.wc.wadef=Department may not be wildcarded when Work Area is defined.
error.wc.wa.perm=You do not have permissions to wildcard the Work Area.
error.wc.dept.perm=You do not have permissions to wildcard the Department.
error.assign.must.have.one.or.more.account=Assignment must have at least one active account associated with it.
error.primary.assignment.exists.for.leaveJob=A primary assignment already exists for leave eligible job '{0}'.
error.assignment.timeblock.existence=Assignment cannot be inactive. There is Time Block associated with this Assignment that ends on {0}.
error.primary.job.already.exist=Primary job already exists for '{0}'.
error.job.inactivate=Cannot inactivate job number {0}.  It is used in active assignments.   
warning.future.eff.date=A record for this object exists with a later effective date, if you continue with submission, this record will be overwritten when the future effective date takes effect.  Are you sure you want to continue?
#end of validation

#EmployeeOverride validation
error.employeeOverride.leavePlan.notfound=Leave Plan not found.
error.employeeOverride.leavePlan.inconsistent=The specified principal id and Accrual Category have different leave plans.
error.employeeOverride.accrualCategory.notfound =The specified Accrual Category '{0}' does not exist.
error.employeeOverride.principalHRAttributes.notfound =The specified Principal HR Attributes '{0}' does not exist.
#end of EmployeeOverride validation

#PrincipalHrAttributes validation
error.principalHrAttibutes.leavePlan.notPresent=Leave plan is required when either leave calendar or Service date are specified.
error.principalHrAttibutes.leaveCalendar.notPresent=Leave calendar is required when either leave plan or Service date are specified.
error.principalHrAttibutes.serviceDate.notPresent=Service Date is required when either leave calendar or leave plan are specified.
#end of PrincipalHrAttributes validation

#LeaveCode validation
error.leaveCode.hours='{0}' should be between 0 and 24.
error.leavecode.role.required=At least one of Employee, Approver,or Department Admin is required.
error.leaveCode.leavePlanMismatch=The Leave Plan specified does not match the Accrual Category Leave Plan ({0}).
#end of LeaveCode validation

#AccrualCategoryRule validation
error.accrualCategoryRule.startEndBlank=Start and End units must both be filled in.
error.accrualCategoryRule.startEnd=Start and End units should not have gaps or overlaps.
error.accrualCategoryRule.maxBalFlag={0} is a required field.
error.accrualCategoryRule.notPresent=Please enter a rule for the accrual category.
error.accrualCategoryRule.invalidRule=Rule {0} is invalid.
error.accrualCategoryRule.notExpected=Accrual Category with no rules specified, but {0} rule(s) found.
error.accrualCategoryRule.required=Accrual Category with rules specified, but NO rule found.
error.accrualCategoryRule.overlapOrGap=There is overlap/gap in Accrual Category rules: previous rule end '{0}', next rule start '{1}'.
#end of AccrualCategoryRule validation

#AccuralCategoryValidation
error.accrualCategory.unique=An accrual category already exists with this name.
#AccrualCategoryValidation

#LeavePlan validation
error.calendar.year.start='{0}' is not a valid date.
error.leaveplan.inactivate=Cannot inactivate leave plan {0}.  There are active employees in the plan.
error.leaveplan.planningMonths='{0}' should be between 1 and 24.

#LeaveDonation validation
error.leavePlan.mismatch='{0}' has a different Leave Plan from `{1}`.
error.codeCategory.mismatch='{0}' Accrual Category and Earn Code must match.

#BalanceTransfer validation
balanceTransfer.exceeds.maxCarryOver=This transfer would exceed the carry over limit of the destined accrual category.
balanceTransfer.exceeds.transferLimit=The requested amount to transfer exceeds the transfer limit.
balanceTransfer.principal.noAttributes=No HR attributes found for this principal.
balanceTransfer.principal.noLeavePlan=No leave plan could be found for this principal.
balanceTransfer.principal.noACinLeavePlan=Leave plan for principal does not contain any accrual categories as of the given effective date.
balanceTransfer.principal.noAttributes=No HR attributes found for this principal as of the given effective date.
balanceTransfer.principal.exists=Could not locate a person for this principal id.
balanceTransfer.principal.active=The specified principal id references an inactive person.
balanceTransfer.fromAccrualCategory.rules.exist=Unable to locate rules for accrual category '{0}'.
balanceTransfer.fromAccrualCategory.rules.maxBalFlag=No balance transfer rules exist for accrual category '{0}'.
balanceTransfer.fromAccrualCategory.rules.transferToAccrualCategory=The accrual category rule for '{0}' does not specify which accrual category to transfer to.
balanceTransfer.accrualCategory.notInLeavePlan='{0}' is not in this principal's leave plan.
balanceTransfer.toAccrualCategory.noMatch='{0}' does not match 'transfer to' rule defined by selected 'from' accrual category.
balanceTransfer.accrualcategory.exists=No such accrual category, '{0}', exists as of the transfer's effective date.
error.principalHRAttribute.notPresent=No principal HR attributes could be found for accrual category '{0}'.
balanceTransfer.transferAmount.tooLow=The desired transfer amount is too low, you must transfer at least {0} {1}.
balanceTransfer.transferAmount.exceedsBalance=Transfer amount exceeds the accrued balance for the given date.
balanceTransfer.transferAmount.maxTransferAmount=Transfer amount is not allowed to exceed {0} {1}.
balanceTransfer.transferAmount.negative=Transfer amount must be greater than or equal to zero.
balanceTransfer.transferAmount.adjust=Lowering the transfer amount may cause additional forfeiture.
balanceTransfer.effectiveDate.error=Effective date cannot be more than one year in advance.
balanceTransfer.transferSSTO=You are about to transfer {0} hours of holiday to {1} hours of vacation.
balanceTransfer.transferSSTO.sstoDoesNotExist=System Scheduled Time Off does not exist for id {0}.
balanceTransfer.transferSSTO.fromAndToACTheSame=From Accrual Category and To Accrual Category are the same.
balanceTransfer.transferSSTO.fromACWrong=From Accrual Category {0} is different than the System Scheduled Time Off's Accrual Category {1}.
balanceTransfer.transferSSTO.accrualCagegoryDoesNotExist=Accrual Category {0} does not exist.
balanceTransfer.transferSSTO.wrongACLeavePlan=Accrual Category's leave plan {0} is different than the employee's leave plan {1}.
balanceTransfer.userNotAuthorized=You are not authorized to take this action for the given principal.
#SystemScheduledTimeOff
error.unusedtime.bank.required=The selected value for Unused Time, '{0}', requires a valid Scheduled Time Off Date. You may only omit this field if Unused Time is Bank.
error.nounusedtimeallowed.selected={0} : When No Unused Time Allowed is selected the Scheduled Timee Off Date and Accrued Date should be the same.
#Leave Adjustment
error.earnCode.accrualCategory.mismatch=The Earn Code {0} does not occur in the specified Accrual Category.
error.cannot.modify.own.balance=Employee {0} cannot modify their own leave balance.
#LeavePayout validation
leavePayout.general.message=Message for Leave Payout.
leavePayout.exceeds.payoutLimit=The requested amount to payout exceeds the payout limit.
leavePayout.principal.noAttributes=No HR attributes found for this principal as of the given effective date.
leavePayout.principal.exists=No principal found.
leavePayout.principal.noLeavePlan=No leave plan could be found for the given effective date.
leavePayout.principal.noACinLeavePlan=Leave plan for principal does not contain any active accrual categories as of the given effective date.
leavePayout.fromAccrualCategory.rules.exist=Unable to locate a payout rule for accrual category '{0}'.
leavePayout.fromAccrualCategory.exists=No such accrual category found.
leavePayout.fromAccrualCategory.rules.maxBalFlag=Max Bal Flag for accrual category '{0}' is set to 'No'.
leavePayout.fromAccrualCategory.rules.payoutToEarnCode=The accrual category rule for '{0}' does not specify a payout earn code.
leavePayout.accrualCategory.notInLeavePlan='{0}' is not in this principal's leave plan.
leavePayout.payoutEarnCode.noMatch='{0}' does not match 'payout earn code' rule defined by selected 'from' accrual category. 
leavePayout.payoutAmount.tooLow=The desired payout amount is too low, you must enter at least {0} {1}.
leavePayout.payoutAmount.required=Payout Amount is a required field.
leavePayout.payoutAmount.maxPayoutAmount=Payout amount is not allowed to exceed {0} {1}.
leavePayout.payoutAmount.negative=Payout amount must be greater than zero.
leavePayout.payoutAmount.adjust=Lowering the payout amount may cause additional forfeiture.
leavePayout.payoutAmount.exceeds.balance=Payout amount cannot exceed the accrual category's balance as of the specified date.
leavePayout.effectiveDate.overOneYear=Effective date cannot be over one year from todays date.
leavePayout.earncode.leaveplan.inconsistent=The Leave Plan Id of specified earn code does not match that of the employee.
leavePayout.earncode.leaveplan.exists=No leave plan could be found for the specified earn code.
leavePayout.earncode.exists=No matching earn code found.
maxBalance.amount.exceedsBalance=Transfer amount exceeds accrued balance for date.

#ShiftDifferential validation
error.location.salaryGroupLocation.nomatch=The specified location '{0}' does not match the salary group location.
day.required=At least one day must be checked.

#Institution and Location validation message shared by multiple maintenance documents
institution.inconsistent=Institution '{0}' is inconsistent with institution '{1}' of {2}
location.inconsistent=Location '{0}' is inconsistent with Location '{1}' of {2}
location.newer.exists=There is a newer version of this Location.
groupKey.inconsistent=Group Key '{0}' is inconsistent with Group Key '{1}' of {2}

#Group key validation messages shared by multiple maintenance documents
groupKeyCode.inconsistent=Group key code '{0}' is inconsistent with group key code '{1}' of {2}

#Position Reporting Category validation
institution.location.inconsistent.positionReportType=There's no Position Report Type '{0}' found with Institution '{1}' and Location '{2}'.
#Position Report Sub Category validation
institution.location.type.inconsistent.positionReportCat=There's no Position Report Category '{0}' found with Institution '{1}', Location '{2}' and Position Report Type '{3}'.
#Position Reporting Group Sub Category validation
institution.location.inconsistent.positionReportSubCat=There's no Position Report Sub Category '{0}' found with Institution '{1}', Location '{2}'.
institution.location.inconsistent.positionReportGroup=There's no Position Report Group '{0}' found with Institution '{1}', Location '{2}' and effective Date '{3}'.

salaryGroup.contains.payGrade=Pay grade '{0}' is not a member of Salary Group '{1}'.

#Classification Validation
institution.location.inconsistent.positionType=There's no Position Type '{0}' found with Institution '{1}', Location '{2}' and effective Date '{3}'.
#shared by Classification and Position Validation
duty.percentage.exceedsMaximum=Duties section: The sum '{0}' of percentage of Duties cannot be greater than 100.

#Position validation
error.funding.effdt.invalid=Funding's Effective Date '{0}' cannot be before Position's effective date '{1}'.
error.overview.fields.required=All the required fields on Overview Page are not filled.
error.classication.fields.required=All the required fields on Classification Page are not filled.
error.primaryDepartment.required=Primary Department must exist.
error.reorganization.noChange=The Reorganization process requires changes to either Primary Department or Reports to Position Number in Overview section..
error.reclassification.noChange=The Reclassification process requires Position Classification be changed in Overview section..
error.changeStatus.noChange=The Change Status process requires Position Status be changed in Overview section..

#Position Responsibility
responsibility.percenttime.exceedsMaximum=Responsibility section: The sum '{0}' of percentage of Percent Time cannot be greater than 100.

#LeavePaypout
error.calendarentry.notfound=Could not retrieve calendar entry for document '{0}'.
error.document.notfound=No document found.
action.reachable.through.triggers=Action should only be reachable through triggers with frequency ON_DEMAND or LEAVE_APPROVE.
attempted.payout.accrualcategory=Attempted to execute on-demand balance payout for accrual category with action frequency.
couldnot.initialize.payout=Could not initialize a balance payout.
no.acccatrule.found=No rule for this accrual category could be found
no.acccat.ruleid.sent=No accrual category rule id has been sent in the request.
couldnot.initialize.baltransfer=Could not initialize balance transfer.
unable.fetch.acccat=Unable to fetch the accrual category that triggerred this transfer.
no.infractions.given=No infractions given.
error.eligible.transfer.notExist=No eligible transfers exist.

#BalanceTransfer
attempted.baltransfer.accrualcategory=Attempted to execute on-demand balance transfer for accrual category with action frequency.
error.SSTOlb.nonExist=Could not find the System Scheduled Time Off leave block that needs to be transferred!.
error.SSTO.nonExist=System Scheduled Time Off not found for this balance transfer!.
error.twoSSTOlb.notfound=There should be 2 system scheduled time off leave blocks!.

#TimeSheetSubmit
principal.without.leavecal=Principal is without a leave calendar.

#PayGrade
error.minrate.invalid=Minimum Rate value should be less than Mid Point and Max Rate.
error.midpointrate.invalid=Mid Point Rate value should be greater than Min Rate and greater than Max Rate.
error.maxrate.invalid=Maximum Rate value should be greater than the Min Rate and Mid Point.

#SystemScheduleTimeOff
error.SSTO,premiumHoliday = Premium Holiday should be selected to Yes if Premium Earn code is given.