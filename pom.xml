<?xml version="1.0" encoding="UTF-8"?>
	<!--
		Copyright 2008-2009 The Kuali Foundation Licensed under the
		Educational Community License, Version 2.0 (the "License"); you may
		not use this file except in compliance with the License. You may
		obtain a copy of the License at
		http://www.opensource.org/licenses/ecl2.php Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
	-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.kuali</groupId>
	<artifactId>trojan-time</artifactId>
	<packaging>war</packaging>
	<name>trojan-time</name>
	<description>Kuali's Trojan Time</description>
	<version>0.1.0-SNAPSHOT</version>

    <!--
         To run without hardcoded username/password/url, you can override
         these variables.

         DB Deploy Example:

         mvn -P Test-Environment  \
             -Ddbdeploy.user=tk -Ddbdeploy.pass=PUT_PASSWORD_HERE  \
             -Ddbdeploy.url=jdbc:mysql://127.0.0.1:3306/tk exec:exec test

         sql-maven-plugin example:

         mvn -P kuali-test -Dtest.db.url=jdbc:mysql://127.0.0.1:3306/ -Dtest.db.pass=password test
         -->
	<properties>
		<dbdeploy.dir>${basedir}/src/main/config/sql</dbdeploy.dir>
        <dbdeploy.user>kuldemo</dbdeploy.user>
        <dbdeploy.pass>kuldemo</dbdeploy.pass>
        <dbdeploy.host>jdbc:mysql://localhost:3306/</dbdeploy.host>

        <test.db.driver>com.mysql.jdbc.Driver</test.db.driver>
        <test.db.name>tk-test</test.db.name>
        <test.db.url>jdbc:mysql://localhost:3306/</test.db.url>
        <test.db.user>tk</test.db.user>
        <test.db.pass>override_this</test.db.pass>
	</properties>

	<profiles>
        <!-- -->
        <!-- Profile: kuali-test -->
        <!-- Description: Contains sql-maven-plugin configuration to run SQL -->
        <!--    generated by either DBDeploy or Torque.  For now it is runs  -->
        <!--    static files located in src/test/config/sql/*                -->
        <!-- -->
        <profile>
            <id>kuali-test</id>
			<build>
				<plugins>
                    <!-- -->
                    <!-- Start of sql-maven-plugin configuration -->
                    <!-- -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.4</version>

                        <dependencies>
                            <dependency>
                                <groupId>mysql</groupId>
                                <artifactId>mysql-connector-java</artifactId>
                                <version>5.1.5</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <driver>${test.db.driver}</driver>
                            <url>${test.db.url}${test.db.name}</url>
                            <username>${test.db.user}</username>
                            <password>${test.db.pass}</password>
                            <skip>${maven.test.skip}</skip>
                        </configuration>

                        <executions>
                        <execution>
                            <id>drop-db-before-test-if-any</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <configuration>
                                <!-- need another database to drop the targeted one -->
                                <url>${test.db.url}</url>
                                <autocommit>true</autocommit>
                                <sqlCommand>drop database `${test.db.name}`</sqlCommand>
                                <!-- ignore error when database is not avaiable -->
                                <onError>continue</onError>
                            </configuration>
                        </execution>

                        <execution>
                            <id>create-db</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <configuration>
                                <url>${test.db.url}</url>
                                <!-- no transaction -->
                                <autocommit>true</autocommit>
                                <sqlCommand>create database `${test.db.name}`</sqlCommand>
                            </configuration>
                        </execution>

                        <!-- This is very slow for some reason, but it only runs once at the start ... -->
                        <execution>
                            <id>create-data</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <configuration>
                                <orderFile>ascending</orderFile>
                                <fileset>
                                    <basedir>${basedir}</basedir>
                                    <includes>
                                        <include>src/test/config/sql/1-schema.sql</include>
                                        <include>src/test/config/sql/2-schema.sql</include>
                                        <include>src/test/config/sql/3-data.sql</include>
                                        <include>src/test/config/sql/4-testtable.sql</include.
                                    </includes>
                                </fileset>
                            </configuration>
                        </execution>

                        <!-- -->
                        <!-- We may not want this to run, so we can inspect the database state. -->
                        <!-- Uncomment if you want the database to be cleaned up. -->
                        <!--
                        <execution>
                            <id>drop-db-after-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <configuration>
                                <url>${test.db.url}</url>
                                <autocommit>true</autocommit>
                                <sqlCommand>drop database `${test.db.name}`</sqlCommand>
                            </configuration>
                        </execution>
                        -->
                        </executions>
                    </plugin>
                    <!-- -->
                    <!-- End of sql-maven-plugin configuration -->
                    <!-- -->
                </plugins>
            </build>
        </profile>
		<profile>
			<id>Dev-Environment</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<workingDirectory>${dbdeploy.dir}</workingDirectory>
							<executable>ant</executable>
							<arguments>
								<argument>dbdeploy-maven</argument>
								<argument>-Ddb.user=kuldemo</argument>
								<argument>-Ddb.password=kuldemo</argument>
								<argument>-Ddb.url=jdbc:mysql://localhost:3306/</argument>
								<argument>-Dapp.version=${project.version}</argument>
								<argument>-Denvironment=dev</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>Test-Environment</id>
			<activation>
				<property>
					<name>environment</name>
					<value>test</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<workingDirectory>${dbdeploy.dir}</workingDirectory>
							<executable>ant</executable>
							<arguments>
								<argument>dbdeploy-maven</argument>
                                <argument>-Ddb.user=${dbdeploy.user}</argument>
                                <argument>-Ddb.password=${dbdeploy.pass}</argument>
                                <argument>-Ddb.url=${dbdeploy.url}</argument>
								<argument>-Dapp.version=${project.version}</argument>
								<argument>-Denvironment=test</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.25</version>
		</dependency>
		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-api</artifactId>
			<version>1.0.1.1</version>
			<exclusions>
				<exclusion>
					<groupId>htmlunit</groupId>
					<artifactId>htmlunit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-impl</artifactId>
			<version>1.0.1.1</version>
			<exclusions>
				<exclusion>
					<groupId>htmlunit</groupId>
					<artifactId>htmlunit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
			<version>1.9.14</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium.client-drivers</groupId>
			<artifactId>selenium-java-client-driver</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-rc</artifactId>
			<version>1.0.2</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>2.0a5</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>selenium-maven-plugin</artifactId>
			<version>1.0.1</version>
			<type>maven-plugin</type>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>p6spy</groupId>
			<artifactId>p6spy</artifactId>
			<version>1.3</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!--
					<excludes>
						<exclude>**/*</exclude>
					</excludes>
					-->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<projectNameTemplate>[artifactId]-[version]</projectNameTemplate>
					<wtpmanifest>true</wtpmanifest>
					<wtpapplicationxml>true</wtpapplicationxml>
					<wtpversion>2.0</wtpversion>
					<wtpContextName>tk-dev</wtpContextName>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-alpha-2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<tagBase>https://ais-svn.usc.edu/svn/T2/tags</tagBase>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>

				<version>1.0-beta-2</version>

				<executions>
					<execution>
						<id>start-selenium</id>

						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
						<configuration>

							<background>true</background>
							<port>${selenium.server.port}</port>
						</configuration>
					</execution>
					<execution>

						<id>stop-selenium</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop-server</goal>

						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>ais-mvn.usc.edu-releases</id>
			<name>ais-mvn.usc.edu-releases</name>
			<url>http://ais-mvn.usc.edu:8080/artifactory/t2</url>
		</repository>
		<snapshotRepository>
			<id>ais-mvn.usc.edu-releases</id>
			<name>ais-mvn.usc.edu-releases</name>
			<url>http://ais-mvn.usc.edu:8080/artifactory/t2</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>kuali</id>
			<name>Kuali Repository</name>
			<url>https://test.kuali.org/maven</url>
		</repository>
		<repository>
			<id>ais-mvn.usc.edu-releases</id>
			<name>ais-mvn.usc.edu-releases</name>
			<url>http://ais-mvn.usc.edu:8080/artifactory</url>
		</repository>
		<repository>
			<id>nexus</id>
			<name>Nexus Repository</name>
			<url>http://nexus.openqa.org/content/repositories/releases</url>
		</repository>
	</repositories>

	<scm>
		<connection>scm:svn:https://ais-svn.usc.edu/svn/T2/trunk</connection>
		<developerConnection>scm:svn:https://ais-svn.usc.edu/svn/T2/trunk</developerConnection>
		<url>https://ais-svn.usc.edu/svn/T2/trunk</url>
	</scm>

</project>
